name: Front-End CI/CD Pipeline

on:
  push:
    branches:
      - github_actions # Branche de test
  pull_request:
    branches:
      - github_actions

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy Front-End
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupération du code source
      - name: Checkout Code
        uses: actions/checkout@v3

      # Étape 2 : Configuration de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Étape 3 : Installation des dépendances nécessaires
      - name: Install Dependencies
        run: |
          npm install --legacy-peer-deps
          npm install @fortawesome/fontawesome-svg-core @fortawesome/react-fontawesome @fortawesome/free-solid-svg-icons --save # Installation des modules manquants

      # Étape 4 : Linting du code (optionnel mais conseillé)
      - name: Fix Linting Issues
        run: npm run lint --fix || true

      # Étape 5 : Construction de l'application React
      - name: Build React Application
        env:
          CI: false # Évite que les warnings soient traités comme des erreurs
        run: npm run build

      # Étape 6 : Tests unitaires avec rapport
      - name: Run React Tests
        run: npm test -- --watchAll=false --coverage

      # Étape 7 : Téléchargement du rapport des tests comme artefact
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: ./coverage

      # Étape 8 : Déploiement sur Heroku
      - name: Deploy to Heroku
        if: ${{ success() }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          echo $HEROKU_API_KEY | heroku auth:token
          git remote add heroku https://git.heroku.com/your-app-name.git
          git push heroku HEAD:master
